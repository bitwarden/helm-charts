apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sm-operator.fullname" . }}-controller-manager
  labels:
    app.kubernetes.io/component: manager
    control-plane: controller-manager
    {{- include "sm-operator.fullLabels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.settings.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "sm-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "sm-operator.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
      {{- if .Values.containers.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.containers.imagePullSecrets }}
      {{- end }}
      containers:
      - args:
          - --secure-listen-address=0.0.0.0:8443
          - --upstream=http://127.0.0.1:8080/
          - --logtostderr=true
          - --v=0
        envFrom:
        - configMapRef:
            name: {{ include "sm-operator.configmap" . }}
        image: {{ .Values.containers.kubeRbacProxy.image.repository }}:{{ .Values.containers.kubeRbacProxy.image.tag }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.containers.kubeRbacProxy.resources | nindent
          10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
        command:
        - /manager
        envFrom:
        - configMapRef:
            name: {{ include "sm-operator.configmap" . }}
        image: {{ .Values.containers.manager.image.repository }}:{{ .Values.containers.manager.image.tag | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.containers.manager.resources | nindent 10
          }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        {{- if .Values.containers.enableSeccompProfileRuntimeDefault }}
        seccompProfile:
          type: RuntimeDefault
        {{- end }}
      serviceAccountName: {{ include "sm-operator.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
