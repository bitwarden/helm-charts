{{- if .Values.database.enabled }}
{{- $dbServiceName := include "bitwarden.mssql" . }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-secret-sql"
  labels:
    app.kubernetes.io/component: pre-install-hook
{{ include "bitwarden.labels" . | indent 4 }}
{{- with .Values.jobs.secret.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed,before-hook-creation
{{- include "bitwarden.annotations" . | indent 4 }}
{{- with .Values.jobs.secret.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-secret-sql"
      labels:
        app.kubernetes.io/component: pre-install-hook
{{ include "bitwarden.podLabels" . | indent 8 }}
{{- with .Values.jobs.secret.podLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
      annotations:
{{- include "bitwarden.podAnnotations" . | indent 8 }}
{{- with .Values.jobs.secret.podAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
    {{- with .Values.general.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.general.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name | quote }}
    {{- end }}
      containers:
      - name: create-resources
        command:
          - "/bin/sh"
          - "-c"
        args: ['
          kubectl create secret generic {{ .Release.Name }}-sql-connection-string -n {{ .Release.Namespace }}
            --from-literal=globalSettings__sqlServer__connectionString="Data Source=tcp:{{ $dbServiceName }},1433;Initial Catalog=vault;Persist Security Info=False;User ID=sa;Password=$SA_PASSWORD;MultipleActiveResultSets=False;Connect Timeout=30;Encrypt=True;TrustServerCertificate=True"

          echo "Done"
        ']
        image: "{{ .Values.supportComponents.kubectl.image.name }}:{{ .Values.supportComponents.kubectl.image.tag }}"
        envFrom:
          - secretRef:
              name: {{ .Values.secrets.secretName | quote }}
        volumeMounts:
        - name: temp
          mountPath: "/bitwarden"
        {{- if .Values.secrets.secretProviderClass }}
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
        {{- end }}
      restartPolicy: Never
      volumes:
        - name: temp
          emptyDir:
            medium: Memory
        {{- if .Values.secrets.secretProviderClass }}
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.secrets.secretProviderClass }}
        {{- end }}
{{- end }}
