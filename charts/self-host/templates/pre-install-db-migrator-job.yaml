---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-db-pre-upgrade"
  labels:
    app.kubernetes.io/component: pre-install-db-migrator-job
  annotations:
    {{- if .Values.database.enabled }}
    "helm.sh/hook": pre-upgrade
    {{- else }}
    "helm.sh/hook": pre-install,pre-upgrade
    {{- end }}
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed,before-hook-creation
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-db-pre-upgrade"
      labels:
        app.kubernetes.io/component: pre-install-db-migrator-job
    spec:
    {{- with .Values.general.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.general.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name | quote }}
      {{- end }}
      containers:
      - name: migrate-db
        env:
        - name: MSSQL_CONN_STRING
          valueFrom:
            secretKeyRef:
              {{- if .Values.database.enabled }}
              name: {{ .Release.Name }}-sql-connection-string
              {{- else }}
              name: {{ .Values.secrets.secretName | quote }}
              {{- end }}
              key: globalSettings__sqlServer__connectionString
        - name: DOTNET_BUNDLE_EXTRACT_BASE_DIR
          value: /migrator
        image: "{{ .Values.supportComponents.dbMigrator.image.name }}:{{default ( include "bitwarden.coreVersionDefault" nil ) .Values.general.coreVersionOverride }}"
        volumeMounts:
        - name: migrator-extract-dir
          mountPath: "/migrator"
        {{- if .Values.secrets.secretProviderClass }}
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
        {{- end }}
      restartPolicy: Never
      volumes:
        - name: migrator-extract-dir
          emptyDir: {}
        {{- if .Values.secrets.secretProviderClass }}
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.secrets.secretProviderClass }}
        {{- end }}
