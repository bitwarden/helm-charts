{{- $identityCertPasswordTxtValue := ( randAlpha 32 ) }}
{{- $currentIdentityCert := ( lookup "v1" "Secret" .Release.Namespace "{{ .Release.Name }}-identity-cert" ) }}
{{- $identityCertPasswordTxtValue := ( lookup "v1" "Secret" .Release.Namespace "{{ .Release.Name }}-identity-cert-password" ) }}

{{- if $currentIdentityCert }}
{{- $identityCertPasswordTxtValue := index $currentIdentityCert.data "globalSettings__identityServer__certificatePassword" | b64dec }}
{{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-setup"
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed,before-hook-creation
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-setup"
      labels:
        app.kubernetes.io/component: pre-install-hook
    spec:
    {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name | quote }}
    {{- end }}

{{- if not $currentIdentityCert }}
      initContainers:
      - name: generate-identity-cert
        command:
          - "/bin/sh"
          - "-c"
        args: ['
          openssl req -x509 -newkey rsa:4096 -sha256 -nodes -keyout /bitwarden/identity.key -out /bitwarden/identity.crt -subj "/CN=Bitwarden IdentityServer" -days 36500;
          openssl pkcs12 -export -out /bitwarden/identity.pfx -inkey /bitwarden/identity.key -in /bitwarden/identity.crt -passout pass:{{ $identityCertPasswordTxtValue }};
          chmod 777 /bitwarden/identity.pfx;
          echo Done;
        ']
        image: "{{ .Values.supportComponents.certGenerator.image.name }}:{{ .Values.supportComponents.certGenerator.image.tag }}"
        volumeMounts:
        - name: temp
          mountPath: "/bitwarden"
{{- end }}
      containers:
      - name: create-resources
        command:
          - "/bin/sh"
          - "-c"
        args: ['
          ls -atlh /bitwarden;
{{- if not $currentIdentityCert }}
          kubectl create secret generic {{ .Release.Name }}-identity-cert --from-file=/bitwarden/identity.pfx -n {{ .Release.Namespace }} ;
          kubectl create secret generic {{ .Release.Name }}-identity-cert-password -n {{ .Release.Namespace }}
            --from-literal=globalSettings__identityServer__certificatePassword={{ $identityCertPasswordTxtValue | quote }};
{{- end }}
          echo "Done"
        ']
        image: "{{ .Values.supportComponents.kubectl.image.name }}:{{ .Values.supportComponents.kubectl.image.tag }}"
        volumeMounts:
        - name: temp
          mountPath: "/bitwarden"
      restartPolicy: Never
      volumes:
        - name: temp
          emptyDir:
            medium: Memory
