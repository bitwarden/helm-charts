name: Version Bump - SM Operator

on:
  workflow_dispatch:
    inputs:
      version_number:
        description: "New Version"
        required: true

env:
  _BRANCH: main
  _BOT_NAME: "bw-ghapp[bot]"
  _BOT_EMAIL: "178206702+bw-ghapp[bot]@users.noreply.github.com"

jobs:
  bump_version:
    name: "Bump Version to ${{ inputs.version_number }}"
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:

      - name: Log in to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Get Azure Key Vault secrets
        id: get-kv-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: gh-org-bitwarden
          secrets: "BW-GHAPP-ID,BW-GHAPP-KEY"

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main

      - name: Generate GH App token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: ${{ steps.get-kv-secrets.outputs.BW-GHAPP-ID }}
          private-key: ${{ steps.get-kv-secrets.outputs.BW-GHAPP-KEY }}
          permission-contents: write
          permission-pull-requests: write

      - name: Checkout Branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ env._BRANCH }}
          token:  ${{ steps.app-token.outputs.token }}
          persist-credentials: true

      - name: "Create version_bump_${{ inputs.version_number }} branch"
        env:
          VERSION_NUMBER: ${{ inputs.version_number }}
        run: git switch -c "version_bump_$VERSION_NUMBER"

      - name: Bump Version
        uses: bitwarden/gh-actions/version-bump@main
        with:
          version: ${{ inputs.version_number }}
          file_path: "charts/sm-operator/Chart.yaml"

      - name: Setup git
        run: |
          git config --local user.name "$_BOT_NAME"
          git config --local user.email "$_BOT_EMAIL"

      - name: Check if version changed
        id: version-changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes_to_commit=TRUE" >> "$GITHUB_OUTPUT"
          else
            echo "changes_to_commit=FALSE" >> "$GITHUB_OUTPUT"
            echo "No changes to commit!";
          fi

      - name: Commit files
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        env:
          VERSION_NUMBER: ${{ inputs.version_number }}
        run: git commit -m "Bumped version to $VERSION_NUMBER" -a

      - name: Push changes
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        env:
          VERSION_NUMBER: ${{ inputs.version_number }}
        run: git push -u origin "version_bump_$VERSION_NUMBER"

      - name: Create Version PR
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        env:
          PR_BRANCH: "version_bump_${{ inputs.version_number }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          BASE_BRANCH: main
          TITLE: "Bump version to ${{ inputs.version_number }}"
          VERSION_NUMBER: ${{ inputs.version_number }}
        run: |
          gh pr create --title "$TITLE" \
            --base "$BASE" \
            --head "$PR_BRANCH" \
            --label "version update" \
            --label "automated pr" \
            --body "
              ## Type of change
              - [ ] Bug fix
              - [ ] New feature development
              - [ ] Tech debt (refactoring, code cleanup, dependency upgrades, etc)
              - [ ] Build/deploy pipeline (DevOps)
              - [X] Other

              ## Objective
              Automated version bump to $VERSION_NUMBER"
