name: _build

on:
  workflow_call:
    inputs:
      chart_name:
        type: string
        required: true

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  build:
    name: Build Helm charts
    runs-on: ubuntu-22.04
    environment: Production
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Helm
        uses: Azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          version: 'v3.13.1'

      - name: Log in to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Set up GPG key and passphrase
        run: |
          az keyvault secret download \
            --vault-name bitwarden-ci \
            --name helm-signing-gpg-private-key \
            --file private

          az keyvault secret download \
          --vault-name bitwarden-ci \
          --name helm-signing-gpg-private-key-passphrase \
          --file .passphrase

          az keyvault secret download \
          --vault-name bitwarden-ci \
          --name helm-signing-gpg-public-key \
          --file public

          gpg --dearmor private
          gpg --dearmor public

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main

      - name: Package Helm chart
        id: helm_package
        run: |
          helm package \
            --sign \
            --key "DevOps Team" \
            --keyring private.gpg \
            --passphrase-file .passphrase \
            charts/${{ inputs.chart_name }}
          PKG_NAME=$(ls *.tgz)
          echo "name=$PKG_NAME" >> "$GITHUB_OUTPUT"

      - name: Verify Helm chart
        run: helm verify ${{ steps.helm_package.outputs.name }} --keyring public.gpg

      - name: Upload Helm chart artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ inputs.chart_name }}
          path: |
            ${{ steps.helm_package.outputs.name }}
            ${{ steps.helm_package.outputs.name }}.prov
          if-no-files-found: error
