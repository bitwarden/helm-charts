name: Update Versions - SM Operator

on:
  workflow_dispatch:

env:
  _BRANCH: main

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      operator_version: ${{ steps.operator-update.outputs.version }}
      operator_version_update: ${{ steps.operator-update.outputs.update }}
    steps:
      - name: Checkout Branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env._BRANCH }}

      - name: Get Latest Operator Version
        id: get-operator-version
        run: |
          image="sm-operator"
          json=$(curl -s "https://registry.hub.docker.com/v2/repositories/bitwarden/$image/tags/")
          digest=$(echo $json |jq '."results"[] | select(.name=="latest")["digest"]')
          latestTag=$(echo $json | jq --argjson DIGEST $digest '."results"[] | select(.digest==$DIGEST) | select(.name != "latest")["name"]' | head -n 1)

          echo "Operator Image ($latestTag)..."

          echo "version=$latestTag" >> $GITHUB_OUTPUT

      - name: Check if operator needs updating
        id: operator-update
        env:
          LATEST_OPERATOR_VERSION: ${{ steps.get-operator-version.outputs.version }}
        run: |
          OPERATOR_VERSION=$(sed -nE 's/^appVersion:\s+([^\s]+)/\1/p' Chart.yaml)

          echo "Operator Version: $OPERATOR_VERSION"
          echo "Latest Operator Version: $LATEST_OPERATOR_VERSION"
          if [ "$OPERATOR_VERSION" != "$LATEST_OPERATOR_VERSION" ]; then
            echo "Needs Operator update!"
            echo "update=1" >> $GITHUB_OUTPUT
          else
            echo "update=0" >> $GITHUB_OUTPUT
          fi
        working-directory: charts/sm-operator

  update-versions:
    name: "Update Versions"
    if: needs.setup.outputs.operator_version_update == 1
    runs-on: ubuntu-22.04
    needs: setup
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env._BRANCH }}

      - name: Create Update Versions Branch
        run: |
          PR_BRANCH=update-versions-$GITHUB_RUN_ID
          echo "PR_BRANCH=$PR_BRANCH" >> $GITHUB_ENV
          git switch -c $PR_BRANCH
          git push -u origin $PR_BRANCH

      - name: Checkout Update Versions Branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env.PR_BRANCH }}

      - name: Update Chart appVersion
        env:
          VERSION: ${{ needs.setup.outputs.operator_version }}
        run: "sed -i -e 's/appVersion:.*/appVersion: '$VERSION'/' Chart.yaml"
        working-directory: charts/sm-operator

      - name: Commit updated files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Updated operator version" -a

      - name: Push changes
        run: git push -u origin $PR_BRANCH

      - name: Create Update Versions PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_BRANCH: ${{ github.ref_name }}
          TITLE: "Update operator version"
        run: |
          gh pr create --title "$TITLE" \
            --base "$BASE_BRANCH" \
            --head "$PR_BRANCH" \
            --label "automated pr" \
            --body "
              ## Type of change
              - [ ] Bug fix
              - [ ] New feature development
              - [ ] Tech debt (refactoring, code cleanup, dependency upgrades, etc)
              - [ ] Build/deploy pipeline (DevOps)
              - [X] Other

              ## Objective
              Automated version update to appVersion in charts/sm-operator/Chart.yaml"
